package com.mediatek.internal.telephony.cdma.pluscode;

import android.telephony.Rlog;
import android.util.SparseIntArray;
import java.util.ArrayList;
import java.util.List;

public class TelephonyPlusCode {
   public static final String[] IDD_MAP_2_CHAR;
   public static final String[] IDD_MAP_3_CHAR;
   public static final String[] IDD_MAP_4_CHAR;
   public static final String[] IDD_MAP_5_CHAR;
   static final String LOG_TAG = "TelephonyPlusCode";
   public static final MccIddNddSid[] MCC_IDD_NDD_SID_MAP = new MccIddNddSid[]{new MccIddNddSid(302, "1", 16384, 18431, "011", "1"), new MccIddNddSid(310, "1", 1, 2175, "011", "1"), new MccIddNddSid(311, "1", 2304, 7679, "011", "1"), new MccIddNddSid(312, "1", 0, 0, "011", "1"), new MccIddNddSid(313, "1", 0, 0, "011", "1"), new MccIddNddSid(314, "1", 0, 0, "011", "1"), new MccIddNddSid(315, "1", 0, 0, "011", "1"), new MccIddNddSid(316, "1", 0, 0, "011", "1"), new MccIddNddSid(334, "52", 24576, 25075, "00", "01"), new MccIddNddSid(334, "52", 25100, 25124, "00", "01"), new MccIddNddSid(404, "91", 14464, 14847, "00", "0"), new MccIddNddSid(405, "91", 14464, 14847, "00", "0"), new MccIddNddSid(425, "972", 8448, 8479, "00", "0"), new MccIddNddSid(428, "976", 15520, 15551, "002", "0"), new MccIddNddSid(440, "81", 12288, 13311, "010", "0"), new MccIddNddSid(450, "82", 2176, 2303, "00700", "0"), new MccIddNddSid(452, "84", 13312, 13439, "00", "0"), new MccIddNddSid(454, "852", 10640, 10655, "001", ""), new MccIddNddSid(455, "853", 11296, 11311, "00", "0"), new MccIddNddSid(460, "86", 13568, 14335, "00", "0"), new MccIddNddSid(460, "86", 25600, 26111, "00", "0"), new MccIddNddSid(466, "886", 13504, 13535, "005", "0"), new MccIddNddSid(470, "880", 13472, 13503, "00", "0"), new MccIddNddSid(510, "62", 10496, 10623, "001", "0")};
   public static final MccSidLtmOff[] MCC_SID_LTM_OFF_MAP = new MccSidLtmOff[]{new MccSidLtmOff(310, 1, -20, -10), new MccSidLtmOff(404, 1, 11, 11), new MccSidLtmOff(310, 7, -20, -10), new MccSidLtmOff(404, 7, 11, 11), new MccSidLtmOff(310, 13, -20, -10), new MccSidLtmOff(454, 13, 16, 16), new MccSidLtmOff(310, 1111, -20, -10), new MccSidLtmOff(450, 1111, 18, 18), new MccSidLtmOff(310, 1112, -20, -10), new MccSidLtmOff(450, 1112, 18, 18), new MccSidLtmOff(310, 1113, -20, -10), new MccSidLtmOff(450, 1113, 18, 18), new MccSidLtmOff(310, 1700, -20, -10), new MccSidLtmOff(450, 1700, 18, 18), new MccSidLtmOff(310, 2177, -20, -10), new MccSidLtmOff(450, 2177, 18, 18), new MccSidLtmOff(310, 2179, -20, -10), new MccSidLtmOff(450, 2179, 18, 18), new MccSidLtmOff(310, 2181, -20, -10), new MccSidLtmOff(450, 2181, 18, 18), new MccSidLtmOff(310, 2183, -20, -10), new MccSidLtmOff(450, 2183, 18, 18), new MccSidLtmOff(310, 2185, -20, -10), new MccSidLtmOff(450, 2185, 18, 18), new MccSidLtmOff(310, 2187, -20, -10), new MccSidLtmOff(450, 2187, 18, 18), new MccSidLtmOff(310, 2189, -20, -10), new MccSidLtmOff(450, 2189, 18, 18), new MccSidLtmOff(310, 2191, -20, -10), new MccSidLtmOff(450, 2191, 18, 18), new MccSidLtmOff(310, 2193, -20, -10), new MccSidLtmOff(450, 2193, 18, 18), new MccSidLtmOff(310, 2195, -20, -10), new MccSidLtmOff(450, 2195, 18, 18), new MccSidLtmOff(310, 2197, -20, -10), new MccSidLtmOff(450, 2197, 18, 18), new MccSidLtmOff(310, 2199, -20, -10), new MccSidLtmOff(450, 2199, 18, 18), new MccSidLtmOff(310, 2201, -20, -10), new MccSidLtmOff(450, 2201, 18, 18), new MccSidLtmOff(310, 2203, -20, -10), new MccSidLtmOff(450, 2203, 18, 18), new MccSidLtmOff(310, 2205, -20, -10), new MccSidLtmOff(450, 2205, 18, 18), new MccSidLtmOff(310, 2207, -20, -10), new MccSidLtmOff(450, 2207, 18, 18), new MccSidLtmOff(310, 2209, -20, -10), new MccSidLtmOff(450, 2209, 18, 18), new MccSidLtmOff(310, 2211, -20, -10), new MccSidLtmOff(450, 2211, 18, 18), new MccSidLtmOff(310, 2213, -20, -10), new MccSidLtmOff(450, 2213, 18, 18), new MccSidLtmOff(310, 2215, -20, -10), new MccSidLtmOff(450, 2215, 18, 18), new MccSidLtmOff(310, 2217, -20, -10), new MccSidLtmOff(450, 2217, 18, 18), new MccSidLtmOff(310, 2219, -20, -10), new MccSidLtmOff(450, 2219, 18, 18), new MccSidLtmOff(310, 2221, -20, -10), new MccSidLtmOff(450, 2221, 18, 18), new MccSidLtmOff(310, 2223, -20, -10), new MccSidLtmOff(450, 2223, 18, 18), new MccSidLtmOff(310, 2225, -20, -10), new MccSidLtmOff(450, 2225, 18, 18), new MccSidLtmOff(310, 2227, -20, -10), new MccSidLtmOff(450, 2227, 18, 18), new MccSidLtmOff(310, 2229, -20, -10), new MccSidLtmOff(450, 2229, 18, 18), new MccSidLtmOff(310, 2231, -20, -10), new MccSidLtmOff(450, 2231, 18, 18), new MccSidLtmOff(310, 2233, -20, -10), new MccSidLtmOff(450, 2233, 18, 18), new MccSidLtmOff(310, 2235, -20, -10), new MccSidLtmOff(450, 2235, 18, 18), new MccSidLtmOff(310, 2237, -20, -10), new MccSidLtmOff(450, 2237, 18, 18), new MccSidLtmOff(310, 2239, -20, -10), new MccSidLtmOff(450, 2239, 18, 18), new MccSidLtmOff(310, 2241, -20, -10), new MccSidLtmOff(450, 2241, 18, 18), new MccSidLtmOff(310, 2243, -20, -10), new MccSidLtmOff(450, 2243, 18, 18), new MccSidLtmOff(310, 2301, -20, -10), new MccSidLtmOff(450, 2301, 18, 18), new MccSidLtmOff(310, 2303, -20, -10), new MccSidLtmOff(450, 2303, 18, 18), new MccSidLtmOff(310, 2369, -20, -10), new MccSidLtmOff(450, 2369, 18, 18), new MccSidLtmOff(310, 2370, -20, -10), new MccSidLtmOff(450, 2370, 18, 18), new MccSidLtmOff(310, 2371, -20, -10), new MccSidLtmOff(450, 2371, 18, 18), new MccSidLtmOff(450, 2222, 18, 18), new MccSidLtmOff(404, 2222, 11, 11), new MccSidLtmOff(440, 12461, 18, 18), new MccSidLtmOff(470, 12461, 12, 12), new MccSidLtmOff(440, 12463, 18, 18), new MccSidLtmOff(470, 12463, 12, 12), new MccSidLtmOff(440, 12464, 18, 18), new MccSidLtmOff(470, 12464, 12, 12)};
   public static final SparseIntArray MOBILE_NUMBER_SPEC_MAP = new SparseIntArray();
   public static final String PROPERTY_ICC_CDMA_OPERATOR_MCC = "cdma.icc.operator.mcc";
   public static final String PROPERTY_OPERATOR_MCC = "cdma.operator.mcc";
   public static final String PROPERTY_OPERATOR_SID = "cdma.operator.sid";
   public static final String PROPERTY_TIME_LTMOFFSET = "cdma.operator.ltmoffset";
   private static List<SidMccMnc> sSidMccMncList = null;

   static {
      SparseIntArray var0 = MOBILE_NUMBER_SPEC_MAP;
      throw new VerifyError("bad dex opcode");
   }

   private static void add(int var0, int var1) {
      SidMccMnc var2 = new SidMccMnc(var0, var1);
      sSidMccMncList.add(var2);
   }

   public static List<SidMccMnc> getSidMccMncList() {
      StringBuilder var1 = (new StringBuilder()).append("[getSidMccMncList] getSidMccMncList = ");
      boolean var0;
      if (sSidMccMncList == null) {
         var0 = true;
      } else {
         var0 = false;
      }

      Rlog.d("TelephonyPlusCode", var1.append(var0).toString());
      if (sSidMccMncList == null) {
         initSidMccMncList();
      }

      return sSidMccMncList;
   }

   private static void initSidMccMncList() {
      Rlog.d("TelephonyPlusCode", "[InitSidMccMncList] InitSidMccMncList");
      sSidMccMncList = new ArrayList();
      add(2, 310010);
      add(3, 310010);
      add(4, 310010);
      add(5, 310730);
      add(6, 310010);
      add(8, 310010);
      add(10, 310070);
      add(12, 310010);
      add(15, 310010);
      add(17, 310010);
      add(18, 310010);
      add(20, 310010);
      add(21, 310010);
      add(22, 310010);
      add(26, 310010);
      add(28, 310010);
      add(30, 310010);
      add(32, 310010);
      add(40, 310010);
      add(41, 310010);
      add(42, 310500);
      add(44, 310070);
      add(45, 310500);
      add(46, 310070);
      add(48, 310010);
      add(51, 310010);
      add(53, 310500);
      add(54, 310500);
      add(56, 310010);
      add(57, 310500);
      add(58, 310010);
      add(59, 310010);
      add(60, 310010);
      add(64, 310010);
      add(65, 310010);
      add(69, 310010);
      add(73, 310010);
      add(74, 310500);
      add(78, 310010);
      add(79, 310500);
      add(80, 310010);
      add(81, 310070);
      add(83, 310500);
      add(84, 310500);
      add(85, 310500);
      add(81, 310070);
      add(83, 310500);
      add(84, 310500);
      add(85, 310500);
      add(86, 310010);
      add(92, 310010);
      add(93, 310010);
      add(94, 310010);
      add(95, 310010);
      add(96, 310010);
      add(97, 310500);
      add(100, 310500);
      add(106, 310070);
      add(110, 310010);
      add(112, 310010);
      add(113, 310010);
      add(114, 310500);
      add(116, 310500);
      add(119, 310010);
      add(120, 310500);
      add(126, 310500);
      add(127, 310010);
      add(130, 310500);
      add(133, 310010);
      add(137, 310010);
      add(138, 310070);
      add(139, 310010);
      add(140, 310010);
      add(142, 310500);
      add(143, 310010);
      add(144, 310500);
      add(150, 310010);
      add(152, 310500);
      add(154, 310010);
      add(156, 310500);
      add(162, 310010);
      add(163, 310010);
      add(165, 310010);
      add(166, 310730);
      add(169, 310500);
      add(179, 310010);
      add(180, 310010);
      add(181, 310010);
      add(182, 310500);
      add(186, 310010);
      add(188, 310500);
      add(189, 310010);
      add(190, 310010);
      add(204, 310500);
      add(205, 310500);
      add(208, 310500);
      add(212, 310500);
      add(214, 310010);
      add(215, 310070);
      add(216, 310500);
      add(220, 310500);
      add(222, 310010);
      add(224, 310010);
      add(226, 310010);
      add(228, 310010);
      add(229, 310070);
      add(234, 310050);
      add(240, 310500);
      add(241, 310010);
      add(244, 310500);
      add(249, 311130);
      add(250, 310010);
      add(256, 310500);
      add(260, 310500);
      add(262, 310010);
      add(264, 0);
      add(266, 310010);
      add(272, 310010);
      add(276, 310010);
      add(277, 310030);
      add(281, 310500);
      add(284, 310010);
      add(285, 310500);
      add(286, 310010);
      add(294, 310010);
      add(298, 310730);
      add(299, 310010);
      add(300, 310010);
      add(302, 310500);
      add(312, 310500);
      add(316, 310010);
      add(318, 310500);
      add(319, 0);
      add(323, 310010);
      add(324, 0);
      add(328, 310010);
      add(329, 310010);
      add(330, 310010);
      add(340, 310500);
      add(341, 0);
      add(342, 310500);
      add(348, 310500);
      add(349, 310010);
      add(350, 310500);
      add(359, 310070);
      add(361, 310070);
      add(362, 42502);
      add(364, 310730);
      add(368, 310500);
      add(370, 310500);
      add(371, 310500);
      add(374, 310500);
      add(376, 310500);
      add(377, 310010);
      add(384, 310730);
      add(386, 310500);
      add(392, 310500);
      add(396, 310500);
      add(400, 310070);
      add(403, 310030);
      add(404, 310010);
      add(414, 310070);
      add(416, 310500);
      add(418, 310500);
      add(424, 310500);
      add(426, 310070);
      add(428, 310010);
      add(436, 310730);
      add(440, 310500);
      add(443, 310010);
      add(444, 310500);
      add(447, 310010);
      add(448, 310500);
      add(451, 310500);
      add(463, 310070);
      add(478, 310500);
      add(486, 310010);
      add(487, 310500);
      add(498, 310010);
      add(502, 310010);
      add(506, 310010);
      add(510, 310180);
      add(511, 310500);
      add(520, 310500);
      add(528, 310010);
      add(529, 310500);
      add(530, 310010);
      add(532, 310010);
      add(539, 310010);
      add(544, 310500);
      add(546, 310500);
      add(550, 310500);
      add(555, 310500);
      add(574, 310730);
      add(578, 310500);
      add(579, 310070);
      add(580, 310730);
      add(587, 310070);
      add(607, 310070);
      add(1015, 310010);
      add(1018, 310050);
      add(1022, 310050);
      add(1024, 310350);
      add(1026, 310010);
      add(1027, 310320);
      add(1028, 310010);
      add(1029, 310500);
      add(1030, 310010);
      add(1034, 310010);
      add(1038, 310500);
      add(1055, 310070);
      add(1058, 310500);
      add(1060, 310010);
      add(1064, 311590);
      add(1069, 310500);
      add(1083, 310010);
      add(1086, 310010);
      add(1088, 310010);
      add(1093, 310500);
      add(1101, 310500);
      add(1124, 310500);
      add(1129, 310010);
      add(1139, 310010);
      add(1148, 310500);
      add(1151, 310010);
      add(1153, 310010);
      add(1155, 310070);
      add(1164, 310010);
      add(1165, 310500);
      add(1173, 310500);
      add(1174, 310010);
      add(1180, 310010);
      add(1189, 310010);
      add(1192, 310500);
      add(1200, 310730);
      add(1211, 310730);
      add(1212, 311430);
      add(1213, 310730);
      add(1215, 310730);
      add(1216, 0);
      add(1220, 310010);
      add(1232, 0);
      add(1234, 0);
      add(1236, 0);
      add(1255, 310890);
      add(1258, 310500);
      add(1267, 310890);
      add(1271, 310500);
      add(1272, 310730);
      add(1280, 311440);
      add(1290, 0);
      add(1317, 310730);
      add(1320, 310730);
      add(1332, 310500);
      add(1333, 0);
      add(1335, 0);
      add(1336, 310500);
      add(1337, 0);
      add(1338, 310500);
      add(1341, 310030);
      add(1345, 310030);
      add(1350, 311050);
      add(1367, 310500);
      add(1369, 310500);
      add(1370, 0);
      add(1372, 0);
      add(1375, 310500);
      add(1382, 0);
      add(1383, 310500);
      add(1385, 310500);
      add(1393, 310500);
      add(1394, 0);
      add(1396, 311420);
      add(1399, 310730);
      add(1400, 310500);
      add(1403, 310730);
      add(1406, 310730);
      add(1408, 310010);
      add(1411, 310730);
      add(1419, 310730);
      add(1423, 310730);
      add(1425, 310730);
      add(1434, 310010);
      add(1441, 310500);
      add(1453, 311030);
      add(1465, 310730);
      add(1466, 310500);
      add(1473, 310500);
      add(1484, 310730);
      add(1493, 310500);
      add(1496, 310100);
      add(1499, 310500);
      add(1500, 310100);
      add(1504, 310100);
      add(1506, 310010);
      add(1508, 310010);
      add(1516, 310010);
      add(1522, 310130);
      add(1528, 310500);
      add(1530, 310500);
      add(1532, 310500);
      add(1534, 310500);
      add(1536, 310500);
      add(1538, 310500);
      add(1540, 310500);
      add(1541, 310730);
      add(1542, 310500);
      add(1544, 310500);
      add(1546, 310500);
      add(1548, 310010);
      add(1559, 310010);
      add(1567, 310010);
      add(1574, 310500);
      add(1590, 0);
      add(1595, 310730);
      add(1598, 311080);
      add(1607, 310730);
      add(1608, 0);
      add(1609, 310890);
      add(1610, 310730);
      add(1640, 310500);
      add(1643, 310730);
      add(1645, 0);
      add(1650, 310500);
      add(1652, 310500);
      add(1661, 310500);
      add(1692, 310950);
      add(1696, 310100);
      add(1703, 310500);
      add(1739, 310500);
      add(1740, 310010);
      add(1741, 310500);
      add(1742, 310020);
      add(1748, 310010);
      add(1749, 310010);
      add(1759, 310500);
      add(1776, 310010);
      add(1779, 310730);
      add(1784, 310730);
      add(1794, 310730);
      add(1802, 310730);
      add(1812, 0);
      add(1818, 310500);
      add(1823, 310500);
      add(1825, 310500);
      add(1826, 310010);
      add(1827, 310010);
      add(1828, 310020);
      add(1830, 310010);
      add(1868, 310980);
      add(1892, 310860);
      add(1902, 310500);
      add(1912, 310010);
      add(1922, 311150);
      add(1932, 311000);
      add(1949, 311040);
      add(1970, 310540);
      add(1976, 0);
      add(1989, 310500);
      add(1996, 0);
      add(2038, 310500);
      add(2058, 310010);
      add(2115, 310010);
      add(2119, 310010);
      add(2129, 310890);
      add(2141, 310730);
      add(3000, 311040);
      add(3034, 311040);
      add(3066, 310010);
      add(3076, 310020);
      add(3226, 310500);
      add(3462, 0);
      add(4103, 310120);
      add(4106, 310120);
      add(4107, 310120);
      add(4110, 310500);
      add(4119, 310010);
      add(4120, 310120);
      add(4121, 310120);
      add(4124, 310120);
      add(4126, 310120);
      add(4132, 310120);
      add(4135, 310120);
      add(4138, 310010);
      add(4139, 310120);
      add(4144, 310120);
      add(4145, 310120);
      add(4148, 310120);
      add(4151, 310120);
      add(4152, 310010);
      add(4153, 310120);
      add(4154, 310010);
      add(4155, 310120);
      add(4157, 310120);
      add(4159, 310120);
      add(4160, 310010);
      add(4162, 310120);
      add(4164, 310120);
      add(4166, 310120);
      add(4168, 310120);
      add(4170, 310120);
      add(4171, 310120);
      add(4174, 310120);
      add(4180, 310120);
      add(4181, 310120);
      add(4182, 310010);
      add(4183, 310120);
      add(4186, 310120);
      add(4188, 310120);
      add(4190, 310120);
      add(4192, 310010);
      add(4195, 310120);
      add(4198, 310120);
      add(4199, 0);
      add(4225, 310500);
      add(4274, 310120);
      add(4292, 310016);
      add(4325, 310016);
      add(4376, 310120);
      add(4381, 310016);
      add(4384, 310120);
      add(4390, 310120);
      add(4396, 310120);
      add(4413, 310016);
      add(4418, 310120);
      add(4509, 310016);
      add(4518, 310016);
      add(4535, 310016);
      add(4622, 310120);
      add(4647, 310016);
      add(4654, 310120);
      add(4667, 310016);
      add(4693, 310016);
      add(4694, 310120);
      add(4743, 310016);
      add(4771, 310016);
      add(4809, 310016);
      add(4812, 310120);
      add(4828, 0);
      add(4857, 310016);
      add(4923, 310016);
      add(4928, 0);
      add(4961, 310016);
      add(4973, 310016);
      add(4979, 0);
      add(4982, 310120);
      add(5019, 310016);
      add(5027, 310016);
      add(5105, 310016);
      add(5116, 310120);
      add(5117, 310016);
      add(5142, 310120);
      add(5145, 310016);
      add(5173, 310016);
      add(5269, 310050);
      add(5351, 0);
      add(5361, 310016);
      add(5386, 310016);
      add(5450, 310016);
      add(5458, 310016);
      add(5461, 0);
      add(5510, 310050);
      add(5513, 310050);
      add(5540, 310016);
      add(5586, 310016);
      add(5618, 310016);
      add(5660, 0);
      add(5667, 310500);
      add(5682, 310050);
      add(5685, 310050);
      add(5756, 310016);
      add(5908, 310730);
      add(5911, 310730);
      add(5914, 310016);
      add(5945, 310016);
      add(6249, 310016);
      add(6323, 310016);
      add(6371, 310016);
      add(6415, 310016);
      add(6425, 310016);
      add(6439, 310016);
      add(6441, 310016);
      add(6488, 310730);
      add(6490, 311440);
      add(7316, 311040);
      add(8097, 0);
      add(8176, 0);
      add(8832, 0);
      add(8861, 0);
      add(8863, 311040);
      add(8950, 311040);
      add(9246, 311040);
      add(9332, 311040);
      add(9562, 311040);
      add(16384, 30286);
      add(16390, 302702);
      add(16408, 0);
      add(16410, 302654);
      add(16412, 302654);
      add(16414, 302703);
      add(16418, 0);
      add(16420, 302610);
      add(16422, 30286);
      add(16428, 302660);
      add(16430, 0);
      add(16462, 0);
      add(16472, 0);
      add(25100, 0);
      add(30524, 310500);
      add(30635, 310500);
      add(31092, 311350);
      throw new VerifyError("bad dex opcode");
   }
}
